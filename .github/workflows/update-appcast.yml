name: Update Appcast

on:
  release:
    types: [created]

jobs:
  update-appcast:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Get release info
      id: release
      run: |
        # Extraer versión del tag (remover 'v' del inicio)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Obtener información del release
        RELEASE_DATA=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/v$VERSION")
        
        # Extraer URL del DMG
        DMG_URL=$(echo "$RELEASE_DATA" | jq -r '.assets[] | select(.name | endswith(".dmg")) | .browser_download_url')
        echo "dmg_url=$DMG_URL" >> $GITHUB_OUTPUT
        
        # Extraer tamaño del DMG
        DMG_SIZE=$(echo "$RELEASE_DATA" | jq -r '.assets[] | select(.name | endswith(".dmg")) | .size')
        echo "dmg_size=$DMG_SIZE" >> $GITHUB_OUTPUT
        
        echo "Version: $VERSION"
        echo "DMG URL: $DMG_URL"
        echo "DMG Size: $DMG_SIZE"
    
    - name: Update appcast.xml
      run: |
        VERSION="${{ steps.release.outputs.version }}"
        DMG_URL="${{ steps.release.outputs.dmg_url }}"
        DMG_SIZE="${{ steps.release.outputs.dmg_size }}"
        PUBDATE=$(date -u +"%a, %d %b %Y %H:%M:%S +0000")
        
        # Crear nueva entrada
        cat > new_entry.xml << EOF
        <item>
            <title>Gula $VERSION</title>
            <link>https://github.com/${{ github.repository }}/releases/tag/v$VERSION</link>
            <description><![CDATA[
                <h2>Gula $VERSION</h2>
                <p>Nueva versión disponible</p>
                
                <h3>Descargas:</h3>
                <p><a href="$DMG_URL">Descargar Gula-$VERSION.dmg</a></p>
                
                <h3>Notas de la versión:</h3>
                <p>Consulta las <a href="https://github.com/${{ github.repository }}/releases/tag/v$VERSION">notas completas de la versión</a> para más detalles.</p>
            ]]></description>
            <pubDate>$PUBDATE</pubDate>
            <guid isPermaLink="false">gula-$VERSION</guid>
            <sparkle:version>$VERSION</sparkle:version>
            <sparkle:shortVersionString>$VERSION</sparkle:shortVersionString>
            <sparkle:minimumSystemVersion>15.0</sparkle:minimumSystemVersion>
            <enclosure 
                url="$DMG_URL"
                length="$DMG_SIZE"
                type="application/octet-stream"
                sparkle:edSignature="MANUAL_SIGNATURE_REQUIRED" />
        </item>
        EOF
        
        # Insertar nueva entrada después de la línea de idioma
        sed -i '/<language>es<\/language>/r new_entry.xml' appcast.xml
        
        echo "Updated appcast.xml with version $VERSION"
        
    - name: Commit updated appcast.xml
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add appcast.xml
        git commit -m "Update appcast for v${{ steps.release.outputs.version }}" || echo "No changes to commit"
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}